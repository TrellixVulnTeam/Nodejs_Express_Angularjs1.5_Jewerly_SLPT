version: "3"

services:
    rest:
        image: mhart/alpine-node:8
        container_name: rest_practica
        command: npm run dev
        restart: on-failure
        working_dir: /app
        volumes:
            - ./rest:/app
        ports:
            - "3000:3000"
        links: 
            - 'mongo'
        depends_on:
            - 'mongo'
        networks:
            - network_practica

    graphql:
        image: mhart/alpine-node:8
        container_name: graphql_practica
        command: npm run dev
        restart: on-failure
        working_dir: /app
        volumes:
            - ./graphql:/app
        ports:
            - "3001:3001"
        links: 
            - 'mongo'
        depends_on:
            - 'mongo'
        networks:
            - network_practica

    mongo:
        image: mvertes/alpine-mongo
        ports:
            - "27018:27017"
        volumes:
            - /data/db
        networks:
            - network_practica
            
    prometheus:
        image: prom/prometheus:v2.20.1
        container_name: prometheus_practica
        volumes:
        - ./prometheus/:/etc/prometheus
        ports:
        - "9090:9090"
        depends_on:
        - rest
        links:
         - rest
        command: ["--config.file=/etc/prometheus/prometheus.yml"]
        networks:
        - network_practica
    grafana:
        image: grafana/grafana:7.1.5
        container_name: grafana_practica
        environment:
        - GF_DISABLE_LOGIN_FORM=true
        - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        - GF_AUTH_ANONYMOUS_ENABLED=true
        - GF_INSTALL_PLUGINS=grafana-clock-panel 1.0.1
        volumes:
        - myGrafanaVol:/var/lib/grafana
        - ./grafana/:/etc/grafana/provisioning/datasources/
        ports:
        - "3500:3000"
        depends_on:
        - prometheus
        links:
        - prometheus   
        networks:
        - network_practica
volumes:
  myGrafanaVol: {}
networks:
  network_practica: 